# Pull Request Description

## Description

This Pull Request introduces major architectural improvements by restructuring the codebase into modules for better maintainability. It separates the logic into three main modules: `ai-provider`, `services` and `types`. The refactoring includes the creation of several new files to house specific functionalities and the deletion of a monolithic, large file (`main.ts`) which previously contained all the code.

Moreover, new functionalities that offer the ability to select git branches and output file name via a command line prompt before creating a PR summary were added. The CLI selection process is facilitated by `@inquirer/select` and `@inquirer/input` additionally.

As a significant enhancement, the git operations were encapsulated in a service named `git.ts` within the `services` directory. It provides functionalities such as getting a file diff and processing a branch summary.

## Added Files

- `app/ai-provider/openai.ts`: Contain the logic for formatting the Pull Request content with the help of the OpenAI service.
- `app/main.ts`: Contains the entire workflow for generating the Pull Request summary.
- `app/services/git.ts`: Provides git commands to extract different data needed for the PR summary.
- `app/types/choice.ts`: Contains the type definition for the options presented to the user to select branches.

## Modified Files

- `package.json`: Added two new packages (`@inquirer/input`, `@inquirer/select`), and adjusted the `name` and `bin` fields according to the new structure.

## Deleted Files

- `main.ts`: This file was deleted as part of the architectural refactoring. Its functionalities were distributed in a modular way in the newly created `app/main.ts` and `app/services/git.ts` files.

## Change Details

- `app/ai-provider/openai.ts`: Created to separate the generation of formatted PR content with OpenAI. It exports a single function(`formatContentWithAI`) that generates a completion from the OpenAI API based on a given diff.
  
- `app/main.ts`: This is the new main entry of the application. It handles the process of pulling git history, applying the AI for formatting, and then exporting the finalized content into a markdown file. It has user inputs for interactive branch and output filename selection.
  
- `app/services/git.ts`: A new service which encapsulates the git operations that the application uses. It exports three functions: `getSummary` to get a summary of differences between two branches, `getDiff` to get a diff of a specific file across two branches, and `git` - a simple-git instance.
  
- `app/types/choice.ts`: This file exports a `Choice` TypeScript type used to structure the options presented to the user in the selection process.
  
- `package.json`: Packages necessary for the input selection process were added: `@inquirer/input` and `@inquirer/select`. The `name` was updated to `prai` from `pr-ai`, and the `bin` field was updated to point to `./app/main.ts`. These changes are aligned with the new project structure.
  
- `main.ts` (deleted): Originally, it handled all operations. After the refactoring, its responsibilities have been taken over by the new files; hence it was deleted to avoid redundancy and to maintain a clean codebase.

Overall, these changes make the project more maintainable by modularizing the codebase. The OpenAI integration is abstracted, with application logic moved to corresponding service classes, thus enhancing the Single Responsibility principle of the codebase. The modification in package.json better represents the new project's structure and added functionalities.